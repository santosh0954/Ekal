@page "/itemStockIn";
@using EkalEntities.Models;
@using Ekal_App.Data;
@inject ItemsService itemService;
@inject ItemStockService itemStockService;
@inject EkaiService ekaiService; 
@inject ItemProviderService itemProviderService;

<h3>Item-StockIn</h3>
<hr />


@if (entities != null)
{
<form>
    <div class="form-row">
        <label for="inputEmail3" class="mr-2">Select Source : </label>
        <RadioGroup TValue="string" Name="rbtnStockSource" Inline="true" CheckedValueChanged="@rbtnStockSource_OnCheckedValueChanged">
            <Radio TValue="string" Value="@("P")">Purchase</Radio>
            <Radio TValue="string" Value="@("D")">Donation</Radio>
        </RadioGroup>
    </div>
    <div class="form-row">
        <div class="col-sm-4">
            <label for="inputEmail3" class=" col-form-label">Select Provider : </label>
            <select id="ddlProviders" class="form-control" @onchange="ddlProviders_SelectedIndexChanged">
                @if (itemProviders != null)
                {
                    @foreach (var _itemProvider in itemProviders)
                    {
                        <option value=@_itemProvider.ItemProviderId>@_itemProvider.FirstName @_itemProvider.MiddleName @_itemProvider.LastName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label">Select Item : </label>
            <select id="ddlItems" class="form-control" @onchange="ddlItems_SelectedIndexChanged">
                @if (items != null)
                {
                    @foreach (var _item in items)
                    {
                        <option value=@_item.ItemId>@_item.ItemName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label">Item Status : </label>
            <select id="ddlItemStatus" class="form-control" @onchange="ddlItems_SelectedIndexChanged">
                <option value="0">SELECT</option>
                <option value="R">Raw Material</option>
                <option value="S">Semi Finished</option>
                <option value="F">Finished</option>
                <option value="D">Ready to Ship</option>
            </select>
        </div>
    </div>
    <div class="form-row my-3">
        <label for="inputEmail3" class="mr-3">Select Ekai : </label>
        <RadioGroup TValue="string" Name="rbtnEkai" Inline="true" CheckedValueChanged="@rbtnEkai_OnCheckedValueChanged">
            <Radio TValue="string" Value="@("1")">Prabhag</Radio>
            <Radio TValue="string" Value="@("2")">Sambhag</Radio>
            <Radio TValue="string" Value="@("3")">Bhag</Radio>
            <Radio TValue="string" Value="@("4")">Anchal</Radio>
            <Radio TValue="string" Value="@("5")">Sanch</Radio>
            <Radio TValue="string" Value="@("6")">Gram Sangathan</Radio>
        </RadioGroup>
    </div>

    <div class="form-row">
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label">Select Prabhag : </label>
            <select id="ddlPrabhag" class="form-control" @onchange="ddlPrabhag_SelectedIndexChanged">
                @if (prabhags != null)
                {
                    @foreach (var _prabhag in prabhags)
                    {
                        <option value=@_prabhag.EkaiId>@_prabhag.EkaiName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-4">
            <label for="inputEmail3" class=" col-form-label">Select Sambhag : </label>
            <select id="ddlSambhag" class="form-control" @onchange="ddlSambhag_SelectedIndexChanged">
                @if (sambhags != null)
                {
                    @foreach (var _data in sambhags)
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>

                    }
                }
            </select>
        </div>
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label">Select Bhag : </label>
            <select id="ddlBhag" class="form-control" @onchange="ddlBhag_SelectedIndexChanged">
                @if (bhags != null)
                {
                    @foreach (var _data in bhags)
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label">Select Anchal : </label>
            <select id="ddlAnchal" class="form-control" @onchange="ddlAnchal_SelectedIndexChanged">
                @if (anchals != null)
                {
                    @foreach (var _data in anchals)
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label">Select Sanch : </label>
            <select id="ddlSanch" class="form-control" @onchange="ddlSanch_SelectedIndexChanged">
                @if (sanchs != null)
                {
                    @foreach (var _data in sanchs)
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="input-group my-3">
        <label for="inputEmail3" class="col-sm-2 col-form-label">Enter Qty : </label>
        <input type="text" class="form-control" placeholder="Enter Quantity" @bind="@Qty" />
        <label for="inputEmail3" class="col-sm-2 col-form-label">Enter Rate : </label>
        <input type="text" class="form-control" placeholder="Enter Rate" @bind="@Rate" />
        <label for="inputEmail3" class="col-sm-2 col-form-label">=</label>
        <input type="text" class="form-control" placeholder="Amount" @bind="@Amount" />
        <div class="input-group-append">
            <button @onclick="@Save" class="btn btn-warning">Add</button>
        </div>
    </div>

</form>
}

@if (entities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @*<div class="align-self-auto">

        <h5 class="text-primary">Total Records : @totalRecords</h5>
        <table class="table table-bordered table-hover table-responsive table-striped pre-scrollable">
            <thead>
                <tr>
                    <th class="d-none">BankID</th>
                    <th>Bank</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entity in entities)
                {
                    <tr>
                        <td class="d-none">@entity.BankId</td>
                        <td>@entity.BankName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>*@
}

@code {
    int itemID;
    int ItemProviderID;
    int EkaiID;
    decimal Qty;
    decimal Rate;
    decimal Amount;

    int selectedPrabhagID = 0;
    int selectedSambhagID = 0;
    int selectedBhagID = 0;
    int selectedAnchalID = 0;
    int selectedSanchID = 0;

    int selectedItemID = 0;
    int selectedProviderID = 0;
    string itemStatus = string.Empty;
    string selectedEkaiType = string.Empty;

    string selectedProviderType = string.Empty;

    int totalRecords = 0;

    List<MstItems> items;

    List<TxnItemStock> entities = null;
    List<TxnItemProvider> itemProviders = null;

    List<MstEkai> prabhags = null;
    List<MstEkai> sambhags = null;
    List<MstEkai> bhags = null;
    List<MstEkai> anchals = null;
    List<MstEkai> sanchs = null;
    List<MstEkai> gramSangathan = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
        await LoadItemsAsync();
        await LoadPrabhagsAsync();
        await LoadItemProvider();
    }

    private async Task LoadAsync()
    {
        entities = await itemStockService.GetAsync();
        totalRecords = entities.Count();
    }

    private async Task LoadItemsAsync()
    {
        items = await itemService.GetAsync();
        items.Insert(0, new MstItems { ItemId = 0, ItemName = "SELECT" });
    }

    private async Task LoadItemProvider()
    {
        var allData = await itemProviderService.GetAsync();
        if (!string.IsNullOrEmpty(selectedProviderType))
        {
            itemProviders = allData.Where(x => x.ProviderType == selectedProviderType).ToList();
            itemProviders.Insert(0, new TxnItemProvider { ItemProviderId = 0, FirstName = "SELECT" });
        }
        StateHasChanged();
    }

    private async Task LoadPrabhagsAsync()
    {
        prabhags = await ekaiService.GetAsync();
        prabhags.Insert(0, new MstEkai { EkaiId = 0, EkaiName = "SELECT" });
    }

    private async Task LoadSamabhagsAsync(int prabhagID)
    {
        prabhags = await ekaiService.GetAsync();
        sambhags = prabhags.Where(x => x.ParentEkaiId == prabhagID && x.EkaiTypeId == 2).ToList();
        sambhags.Insert(0, new MstEkai { EkaiId = 0, EkaiName = "SELECT" });
    }

    private async Task LoadBhagsAsync(int sambhagID)
    {
        var allData = await ekaiService.GetAsync();
        bhags = prabhags.Where(x => x.ParentEkaiId == sambhagID && x.EkaiTypeId == 3).ToList();
        bhags.Insert(0, new MstEkai { EkaiId = 0, EkaiName = "SELECT" });
    }

    private async Task LoadAnchalsAsync(int bhagID)
    {
        var allData = await ekaiService.GetAsync();
        anchals = prabhags.Where(x => x.ParentEkaiId == bhagID && x.EkaiTypeId == 4).ToList();
        anchals.Insert(0, new MstEkai { EkaiId = 0, EkaiName = "SELECT" });
    }

    private async Task LoadSanchsAsync(int anchalID)
    {
        var allData = await ekaiService.GetAsync();
        sanchs = prabhags.Where(x => x.ParentEkaiId == anchalID && x.EkaiTypeId == 5).ToList();
        sanchs.Insert(0, new MstEkai { EkaiId = 0, EkaiName = "SELECT" });
    }

    private async Task LoadGramSangathansAsync(int sanchID)
    {
        var allData = await ekaiService.GetAsync();
        gramSangathan = prabhags.Where(x => x.ParentEkaiId == sanchID && x.EkaiTypeId == 6).ToList();
        gramSangathan.Insert(0, new MstEkai { EkaiId = 0, EkaiName = "SELECT" });
    }

    public async Task Save()
    {
        TxnItemStock entity = new TxnItemStock();
        entity.ItemId = selectedItemID;
        entity.Qty = Qty;
        entity.Rate = Rate;
        entity.TotalAmount = Amount;
        entity.ItemProviderId = selectedProviderID;
        entity.Status = itemStatus;

        var response = await itemStockService.AddAsync(entity);
        if (response)
        {
            await LoadAsync();
            ResetFields();
        }
    }

    private void ResetFields()
    {
        itemID = 0;
        Qty = 0;
    }

    #region Events

    void rbtnEkai_OnCheckedValueChanged(string value)
    {
        selectedEkaiType = value;
    }

    async void rbtnStockSource_OnCheckedValueChanged(string value)
    {
        selectedProviderType = value;
        await LoadItemProvider();

    }

    void ddlItems_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedItemID = Convert.ToInt32(e.Value);
    }

    void ddlItemStatus_SelectedIndexChanged(ChangeEventArgs e)
    {
        itemStatus = Convert.ToString(e.Value);
    }

    void ddlProviders_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedProviderID = Convert.ToInt32(e.Value);
    }

    async void ddlPrabhag_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedPrabhagID = Convert.ToInt32(e.Value);
        if (selectedPrabhagID > 0)
        {
            await LoadSamabhagsAsync(selectedPrabhagID);
        }
    }

    async void ddlSambhag_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedSambhagID = Convert.ToInt32(e.Value);
        if (selectedSambhagID > 0)
        {
            await LoadBhagsAsync(selectedSambhagID);
        }
    }

    async void ddlBhag_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedBhagID = Convert.ToInt32(e.Value);
        if (selectedBhagID > 0)
        {
            await LoadAnchalsAsync(selectedBhagID);
        }
    }

    async void ddlAnchal_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedAnchalID = Convert.ToInt32(e.Value);
        if (selectedAnchalID > 0)
        {
            await LoadSanchsAsync(selectedAnchalID);
        }
    }

    async void ddlSanch_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedSanchID = Convert.ToInt32(e.Value);
        if (selectedSanchID > 0)
        {
            await LoadGramSangathansAsync(selectedSanchID);
        }
    }

    #endregion
}



