@page "/itemStockIn";
@using EkalEntities.Models;
@using Ekal_App.Data;
@inject ItemStockService itemStockService;
@inject EkaiService ekaiService; 
@inject ItemProviderService itemProviderService;

<h3>ItemStockIn</h3>
<hr />


@if (entities != null)
{
    <form>
        <div class="form-group row">
            <div class="form-group row">
                <label for="inputEmail3" class="col-sm-3 col-form-label">Select Source : </label>
                <RadioGroup TValue="string" Name="rbtnStockSource" Inline="true" CheckedValueChanged="@rbtnStockSource_OnCheckedValueChanged">
                    <Radio TValue="string" Value="@("P")">Purchase</Radio>
                    <Radio TValue="string" Value="@("D")">Donation</Radio>                    
                </RadioGroup>
            </div>
            <div class="form-group row">
                <label for="inputEmail3" class="col-sm-3 col-form-label">Select Prabhag : </label>
                <select id="ddlItemProvider" class="form-control" >
                    @if (prabhags != null)
                    {
                        @foreach (var _prabhag in prabhags)
                        {
                            <option value=@_prabhag.EkaiId>@_prabhag.EkaiName</option>
                        }
                    }
                </select>
            </div>
            <div>
                <div>
                    <div>
                        <label title="Stock At"> Stock At</label>
                        <div>
                            <input type="radio" /> Purchase
                            <input type="radio" />Donation
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <label for="inputEmail3" class="col-sm-2 col-form-label">Providers : </label>
                <div class="col-lg-3 col-md-3 col-sm-10">
                    <select class="form-control">
                        @if (itemProviders != null)
                        {
                            @foreach (var _itemProvider in itemProviders)
                            {
                                <option value=@_itemProvider.ItemProviderId>(@_itemProvider.FirstName+ " " @_itemProvider.MiddleName)</option>
                            }
                        }
                    </select>
                </div>

                @*<label for="inputEmail3" class="col-lg-3 col-md-3 col-sm-10 col-form-label text-right">Sambhag : </label>
                <div class="col-lg-3 col-md-3 col-sm-10">
                    <select class="form-control">
                        @if (districts != null)
                        {
                            @foreach (var _district in districts)
                            {
                                <option value=@_district.DistrictCode>@_district.DistrictName</option>
                            }
                        }
                    </select>
                </div>
                <label for="inputEmail3" class="col-lg-3 col-md-3 col-sm-10 col-form-label text-right">Bhag : </label>
                <div class="col-lg-3 col-md-3 col-sm-10">
                    <select class="form-control">
                        @if (districts != null)
                        {
                            @foreach (var _district in districts)
                            {
                                <option value=@_district.DistrictCode>@_district.DistrictName</option>
                            }
                        }
                    </select>
                </div>
                <label for="inputEmail3" class="col-lg-3 col-md-3 col-sm-10 col-form-label text-right">Anchal : </label>
                <div class="col-lg-3 col-md-3 col-sm-10">
                    <select class="form-control">
                        @if (districts != null)
                        {
                            @foreach (var _district in districts)
                            {
                                <option value=@_district.DistrictCode>@_district.DistrictName</option>
                            }
                        }
                    </select>
                </div>
                <label for="inputEmail3" class="col-lg-3 col-md-3 col-sm-10 col-form-label text-right">Sanch : </label>
                <div class="col-lg-3 col-md-3 col-sm-10">
                    <select class="form-control">
                        @if (districts != null)
                        {
                            @foreach (var _district in districts)
                            {
                                <option value=@_district.DistrictCode>@_district.DistrictName</option>
                            }
                        }
                    </select>
                </div>
                <label for="inputEmail3" class="col-lg-3 col-md-3 col-sm-10 col-form-label text-right">Gram Sangathan : </label>
                <div class="col-lg-3 col-md-3 col-sm-10">
                    <select class="form-control">
                        @if (districts != null)
                        {
                            @foreach (var _district in districts)
                            {
                                <option value=@_district.DistrictCode>@_district.DistrictName</option>
                            }
                        }
                    </select>
                </div>*@

            </div>
            <div>
                <div>
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Enter Quantity" @bind="@Qty" />
                        <div class="input-group-append">
                            <button @onclick="@Save" class="btn btn-warning">Add</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
}

@if (entities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @*<div class="align-self-auto">

        <h5 class="text-primary">Total Records : @totalRecords</h5>
        <table class="table table-bordered table-hover table-responsive table-striped pre-scrollable">
            <thead>
                <tr>
                    <th class="d-none">BankID</th>
                    <th>Bank</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entity in entities)
                {
                    <tr>
                        <td class="d-none">@entity.BankId</td>
                        <td>@entity.BankName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>*@
}

@code {
    int itemID;
    int ItemProviderID;
    int EkaiID;
    decimal Qty;

    string selectedProviderType = string.Empty;

    int totalRecords = 0;

    List<TxnItemStock> entities = null;
    List<TxnItemProvider> itemProviders = null;

    List<MstEkai> prabhags = null;
    List<MstEkai> sambhags = null;
    List<MstEkai> bhags = null;
    List<MstEkai> anchals = null;
    List<MstEkai> sanchs = null;
    List<MstEkai> gramSangathan = null;


    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
        await LoadPrabhagsAsync();
    }

    private async Task LoadAsync()
    {
        entities = await itemStockService.GetAsync();
        totalRecords = entities.Count();
    }

    private async Task LoadItemProvider()
    {
        var allData = await itemProviderService.GetAsync();
        if (!string.IsNullOrEmpty(selectedProviderType))
            itemProviders = allData.Where(x => x.ProviderType == selectedProviderType).ToList();
    }

    private async Task LoadPrabhagsAsync()
    {
        prabhags = await ekaiService.GetAsync();
    }

    private async Task LoadSamabhagsAsync(int prabhagID)
    {
        prabhags = await ekaiService.GetAsync();
        sambhags = prabhags.Where(x => x.ParentEkaiId == prabhagID && x.EkaiTypeId == 2).ToList();
    }

    private async Task LoadBhagsAsync(int sambhagID)
    {
        var allData = await ekaiService.GetAsync();
        bhags = prabhags.Where(x => x.ParentEkaiId == sambhagID && x.EkaiTypeId == 3).ToList();
    }

    private async Task LoadAnchalsAsync(int bhagID)
    {
        var allData = await ekaiService.GetAsync();
        anchals = prabhags.Where(x => x.ParentEkaiId == bhagID && x.EkaiTypeId == 4).ToList();
    }

    private async Task LoadSanchsAsync(int anchalID)
    {
        var allData = await ekaiService.GetAsync();
        sanchs = prabhags.Where(x => x.ParentEkaiId == anchalID && x.EkaiTypeId == 5).ToList();
    }

    private async Task LoadGramSangathansAsync(int sanchID)
    {
        var allData = await ekaiService.GetAsync();
        gramSangathan = prabhags.Where(x => x.ParentEkaiId == sanchID && x.EkaiTypeId == 6).ToList();
    }

    public async Task Save()
    {
        TxnItemStock entity = new TxnItemStock();
        entity.ItemId = itemID;


        var response = await itemStockService.AddAsync(entity);
        if (response)
        {
            await LoadAsync();
            ResetFields();
        }
    }

    private void ResetFields()
    {
        itemID = 0;
        Qty = 0;
    }

    #region Events

    void rbtnStockSource_OnCheckedValueChanged(string value)
    {
        selectedProviderType = value;
    }

    #endregion
}



