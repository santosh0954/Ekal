@page "/itemFormula";
@using EkalEntities.Models;
@using Ekal_App.Data;
@inject ItemsService itemService;
@inject ItemFormulaService itemFormulaService;
@inject IToastService toastService;

<h3>Item Formula</h3>
<hr />

@if (items == null)
{
    <p><em>Loading...</em></p>
}
@if (items != null)
{
<form>

    <div class="form-row">
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label text-right">Formula Name : </label>
            <input type="text" class="form-control" placeholder="Enter Formula Name" @bind="@formulaName" />
        </div>
     </div>
    <div class="form-row">
        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label text-right">Item : </label>
            <select id="ddlItems" class="form-control" @bind="@selectedItemID">
                @if (items != null)
                {
                    @foreach (var _item in items)
                    {
                        <option value=@_item.ItemId>@_item.ItemName</option>
                    }
                }
            </select>
        </div>

        <div class="col-sm-4">
            <label for="inputEmail3" class="col-form-label text-right">For Qty : </label>
            <input type="text" class="form-control" placeholder="Enter Qty" @bind="@forQty" />
        </div>
        <div class="col-sm-4" style="padding-top: 37px">
            
            <button @onclick="@Save" class="btn btn-warning px-5">Add</button>
        </div>
    </div>

</form>
}


@code {
    int forQty = 0;
    string formulaName = string.Empty;
    List<TxnItemFormula> itemFormula = null;
    List<MstItems> items = null;

    int selectedItemID = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadItemsAsync();
    }

    private async Task LoadItemsAsync()
    {
        items = await itemService.GetAsync();
        items.Insert(0, new MstItems { ItemId = 0, ItemName = "SELECT" });
    }




    public async Task Save()
    {
        TxnItemFormula entity = new TxnItemFormula();
        entity.FormulaName = formulaName;
        entity.ItemId = selectedItemID;
        entity.ForQty = forQty;


        var response = await itemFormulaService.AddAsync(entity);
        if (response)
        {
            await LoadItemsAsync();
            ResetFields();
        }
    }

    private bool ValidateFields()
    {
        if (string.IsNullOrEmpty(formulaName))
        {
            toastService.ShowError("Please enter formula name.");
            return false;
        }
        else
            return true;
    }

    private void ResetFields()
    {
        forQty = 0;
        formulaName = string.Empty;
        selectedItemID = 0;
    }

}
