@page "/state"
@using EkalEntities.Models;
@using Ekal_App.Data;
@inject StateService service;

<h3>States</h3>
<hr />

   @if (entities != null)
    {
    <form>
        <table class="form-group">
            <tr>                
                <td>
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Enter State Name"  @bind="@stateName" >
                        <div class="input-group-append">
                            <button  @onclick="@Save" class="btn btn-warning">Add State</button>
                        </div>
                    </div>                    
                </td>
            </tr>
        </table>
    </form>
    }

    @if (entities == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
    <div class="align-self-auto" style="height:400px; overflow-y: auto">
        
        <h5 class="text-primary">Total Records : @totalRecords</h5>
        <table class="table table-bordered table-hover table-responsive table-striped pre-scrollable">
            <thead>
                <tr>
                    <th class="d-none">StateCode</th>
                    <th>StateName</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entity in entities)
                                {
                <tr>
                    <td class="d-none">@entity.StateCode</td>
                    <td>@entity.StateName</td>
                </tr>
                                }
            </tbody>
        </table>

    </div>
    
    }

@code {
    string stateCode;
    string stateName;

    int totalRecords = 0;

    List<MstStates> entities = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        entities = await service.GetAsync();
        totalRecords = entities.Count();
    }

    public async Task Save()
    {
        MstStates entity = new MstStates();
        entity.StateName = stateName;


        var response = await service.AddAsync(entity);
        if (response)
        {
            await LoadAsync();
            ResetFields();
        }
    }

    private void ResetFields()
    {
        stateCode = null;
        stateName = string.Empty;
    }

}
