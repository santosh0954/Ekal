@page "/ekai";
@using EkalEntities.Models;
@using Ekal_App.Data;
@inject EkaiService ekaiService;

<h3>Ekai</h3>
<hr />

@if (entities != null)
{
    <EditForm Model="@ekai">

    <div class="form-row">
        <label class="mr-2">Select Ekai : </label>
        <RadioGroup TValue="string" Name="rbtnEkai" Inline="true" CheckedValueChanged="@rbtnEkai_OnCheckedValueChanged">
            <Radio TValue="string" Value="@("1")">Prabhag</Radio>
            <Radio TValue="string" Value="@("2")">Sambhag</Radio>
            <Radio TValue="string" Value="@("3")">Bhag</Radio>
            <Radio TValue="string" Value="@("4")">Anchal</Radio>
            <Radio TValue="string" Value="@("5")">Sanch</Radio>
            <Radio TValue="string" Value="@("6")">Gram Sangathan</Radio>
        </RadioGroup>
    </div>

    <div class="form-row">
        <div class="col-sm-4">
            <label for="ddlPrabhag" class="col-form-label">Select Prabhag : </label>
            <CustomInputSelect id="ddlPrabhag" class="form-control form-control-sm" disabled="@DisablePrabhag"
                               ValueChanged="@((int value)=>PrabhagStateHasChanged(value))"
                               ValueExpression="@(()=> selectedPrabhagID)"
                               Value="@selectedPrabhagID">
                <option value="0">--SELECT--</option>
                @foreach (var _prabhag in prabhags)
                {
                    @if (_prabhag.EkaiId == selectedPrabhagID)
                    {
                        <option value=@_prabhag.EkaiId>@_prabhag.EkaiName</option>
                    }
                    else
                    {
                        <option value=@_prabhag.EkaiId>@_prabhag.EkaiName</option>
                    }
                }

            </CustomInputSelect>
        </div>
        <div class="col-sm-4">
            <label for="ddlSambhag" class="col-form-label">Select Sambhag : </label>
            <CustomInputSelect id="ddlSambhag" class="form-control form-control-sm" disabled="@DisableSambhag"
                               ValueChanged="@((int value)=>SambhagStateHasChanged(value))"
                               ValueExpression="@(()=> selectedSambhagID)"
                               Value="@selectedSambhagID">

                <option value="0">--SELECT--</option>
                
                @foreach (var _data in sambhags)
                {
                    @if (_data.EkaiId == selectedSambhagID)
                    {
                        <option selected value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                    else
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                }
                
            </CustomInputSelect>
        </div>
        <div class="col-sm-4">
            <label for="ddlBhag" class="col-form-label">Select Bhag : </label>
            <CustomInputSelect id="ddlBhag" class="form-control form-control-sm" disabled="@DisableBhag"
                               ValueChanged="@((int value)=>BhagStateHasChanged(value))"
                               ValueExpression="@(()=> selectedBhagID)"
                               Value="@selectedBhagID">
                <option value="0">--SELECT--</option>
                
                @foreach (var _data in bhags)
                {
                    @if (_data.EkaiId == selectedBhagID)
                    {
                        <option selected value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                    else
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                }
                
            </CustomInputSelect>
        </div>
    </div>
    <div class="form-row">
        <div class="col-sm-4">
            <label for="ddlAnchal" class="col-form-label">Select Anchal : </label>
            <CustomInputSelect id="ddlAnchal" class="form-control form-control-sm" disabled="@DisableAnchal" 
                                ValueChanged="@((int value)=>AnchalStateHasChanged(value))"
                               ValueExpression="@(()=> selectedAnchalID)"
                               Value="@selectedAnchalID">
                <option value="0">--SELECT--</option>
                @foreach (var _data in anchals)
                {
                    @if (_data.EkaiId == selectedAnchalID)
                    {
                        <option selected value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                    else
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                }
                
            </CustomInputSelect>
        </div>
        <div class="col-sm-4">
            <label for="ddlSanch" class="col-form-label">Select Sanch : </label>
            <CustomInputSelect id="ddlSanch" class="form-control form-control-sm" disabled="@DisableSanch"
                               ValueChanged="@((int value)=>SanchStateHasChanged(value))"
                               ValueExpression="@(()=> selectedSanchID)"
                               Value="@selectedSanchID">
                <option value="0">--SELECT--</option>
                
                @foreach (var _data in sanchs)
                {
                    @if (_data.EkaiId == selectedSanchID)
                    {
                        <option selected value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                    else
                    {
                        <option value=@_data.EkaiId>@_data.EkaiName</option>
                    }
                }
                
            </CustomInputSelect>
        </div>
    </div>

    <div class="form-row">
        <div class="col-sm-4 input-group my-3">
            <input type="text" class="form-control" placeholder="Enter @selectedEkaiName Name" @bind-value="ekai.EkaiName" />
            <div class="input-group-append">
                <button @onclick="@Save" class="btn btn-warning">Add</button>
            </div>
        </div>
    </div>

</EditForm>
}

@if (entities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="align-self-auto">

        <h6 class="text-primary text-sm-right">Total Records : @totalRecords</h6>
        <table class="table table-bordered table-hover table-responsive table-striped pre-scrollable">
            <thead>
                <tr>
                    <th class="d-none">PrabhagId</th>
                    <th>SrNo</th>
                    <th>Prabhag</th>
                    <th>Sambhag</th>
                    <th>Bhag</th>
                    <th>Anchal</th>
                    <th>Sanch</th>
                    <th>Gram Sangathan</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entity in entities)
                {
                <tr>
                    <td class="d-none">@entity.PrabhagId</td>
                    <td>@entity.SrNo</td>
                    <td>@entity.Prabhag</td>
                    <td>@entity.Sambhag</td>
                    <td>@entity.Bhag</td>
                    <td>@entity.Anchal</td>
                    <td>@entity.Sanch</td>
                    <td>@entity.Gram</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    string ekaiID;
    //string ekaiName;
    string selectedEkai = string.Empty;
    string selectedEkaiName = "Ekai";
    int? selectedParentID = 0;

    int selectedPrabhagID = 0;
    int selectedSambhagID = 0;
    int selectedBhagID = 0;
    int selectedAnchalID = 0;
    int selectedSanchID = 0;

    int totalRecords = 0;

    bool DisablePrabhag = true;
    bool DisableSambhag = true;
    bool DisableBhag = true;
    bool DisableAnchal = true;
    bool DisableSanch = true;

    MstEkai ekai = new MstEkai();

    List<VEkai> entities = null;

    List<MstEkai> prabhags = new List<MstEkai>();
    List<MstEkai> sambhags = new List<MstEkai>();
    List<MstEkai> bhags = new List<MstEkai>();
    List<MstEkai> anchals = new List<MstEkai>();
    List<MstEkai> sanchs = new List<MstEkai>();
    List<MstEkai> gramSangathan = new List<MstEkai>();

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        entities = await ekaiService.GetViewAsync();
        totalRecords = entities.Count();

        await LoadPrabhagsAsync();

        StateHasChanged();
    }

    private async Task LoadPrabhagsAsync()
    {
        var allData = await ekaiService.GetAsync();
        prabhags = allData.Where(x => x.EkaiTypeId == 1).ToList();
        StateHasChanged();
    }

    private async Task LoadSamabhagsAsync(int prabhagID)
    {
        var allData = await ekaiService.GetAsync();
        sambhags = allData.Where(x => x.ParentEkaiId == prabhagID && x.EkaiTypeId == 2).ToList();

        StateHasChanged();
    }

    private async Task LoadBhagsAsync(int sambhagID)
    {
        var allData = await ekaiService.GetAsync();
        bhags = allData.Where(x => x.ParentEkaiId == sambhagID && x.EkaiTypeId == 3).ToList();

        StateHasChanged();
    }

    private async Task LoadAnchalsAsync(int bhagID)
    {
        var allData = await ekaiService.GetAsync();
        anchals = allData.Where(x => x.ParentEkaiId == bhagID && x.EkaiTypeId == 4).ToList();

        StateHasChanged();
    }

    private async Task LoadSanchsAsync(int anchalID)
    {
        var allData = await ekaiService.GetAsync();
        sanchs = allData.Where(x => x.ParentEkaiId == anchalID && x.EkaiTypeId == 5).ToList();

        StateHasChanged();
    }

    private async Task LoadGramSangathansAsync(int sanchID)
    {
        var allData = await ekaiService.GetAsync();
        gramSangathan = allData.Where(x => x.ParentEkaiId == sanchID && x.EkaiTypeId == 6).ToList();
        StateHasChanged();
    }

    public async Task Save()
    {
        if (selectedParentID == 0)
        {
            Console.WriteLine("Please select appropriate Ekai.");
        }
        else
        {
            ekai.EkaiTypeId = Convert.ToInt16(selectedEkai);

            switch (Convert.ToInt16(selectedEkai))
            {
                case 1:
                    selectedParentID = null;
                    break;
                case 2:
                    selectedParentID = selectedPrabhagID;
                    break;
                case 3:
                    selectedParentID = selectedSambhagID;
                    break;
                case 4:
                    selectedParentID = selectedBhagID;
                    break;
                case 5:
                    selectedParentID = selectedAnchalID;
                    break;
                case 6:
                    selectedParentID = selectedSanchID;
                    break;
            }
            if (ValidateFields())
            {
                ekai.ParentEkaiId = selectedParentID;
                ekai.CreatedDate = DateTime.Now;
                ekai.CreatedBy = Common.UserProfileID;

                var response = await ekaiService.AddAsync(ekai);
                if (response)
                {
                    await LoadAsync();
                    ResetFields();
                }
            }
        }
    }

    private void ResetFields()
    {
        ekaiID = null;
        //ekaiName = string.Empty;
        ekai.EkaiName = string.Empty;
        ekai.EkaiId = 0;
    }

    private bool ValidateFields()
    {
        if (string.IsNullOrEmpty(ekai.EkaiName))
            return false;
        return true;
    }

    #region Events


    void rbtnEkai_OnCheckedValueChanged(string value)
    {
        selectedEkai = value;
        DisablePrabhag = true;
        DisableSambhag = true;
        DisableBhag = true;
        DisableAnchal = true;
        DisableSanch = true;

        switch (Convert.ToInt16(value))
        {
            case 1:
                selectedEkaiName = "Prabhag";
                break;
            case 2:
                DisablePrabhag = false;
                selectedEkaiName = "Sambhag";
                break;
            case 3:
                DisablePrabhag = false;
                DisableSambhag = false;
                selectedEkaiName = "Bhag";
                break;
            case 4:
                DisablePrabhag = false;
                DisableSambhag = false;
                DisableBhag = false;
                selectedEkaiName = "Anchal";
                break;
            case 5:
                DisablePrabhag = false;
                DisableSambhag = false;
                DisableBhag = false;
                DisableAnchal = false;
                selectedEkaiName = "Sanch";
                break;
            case 6:
                DisablePrabhag = false;
                DisableSambhag = false;
                DisableBhag = false;
                DisableAnchal = false;
                DisableSanch = false;
                selectedEkaiName = "Gram";
                break;

        }
    }


    async void PrabhagStateHasChanged(int value)
    {
        selectedPrabhagID = value;
        if (selectedPrabhagID > 0)
        {
            selectedParentID = selectedPrabhagID;
            await LoadSamabhagsAsync(selectedPrabhagID);
        }
    }

    async void SambhagStateHasChanged(int value)
    {
        selectedSambhagID = value;
        if (selectedSambhagID > 0)
        {
            selectedParentID = selectedSambhagID;
            await LoadBhagsAsync(selectedSambhagID);
        }
    }

    async void BhagStateHasChanged(int value)
    {
        selectedBhagID = value;
        if (selectedBhagID > 0)
        {
            selectedParentID = selectedBhagID;
            await LoadAnchalsAsync(selectedBhagID);
        }
    }

    async void AnchalStateHasChanged(int value)
    {
        selectedAnchalID = value;
        if (selectedAnchalID > 0)
        {
            selectedParentID = selectedAnchalID;
            await LoadSanchsAsync(selectedAnchalID);
        }
    }

    async void SanchStateHasChanged(int value)
    {
        selectedSanchID = value;
        if (selectedSanchID > 0)
        {
            selectedParentID = selectedSanchID;
            await LoadGramSangathansAsync(selectedSanchID);
        }
    }

    #endregion

}

