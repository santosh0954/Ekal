@page "/ekai";
@using EkalEntities.Models;
@using Ekal_App.Data;
@inject EkaiService ekaiService;
@inject IJSRuntime JsRuntime;

<h3>Ekai</h3>
<hr />

@if (entities != null)
{
    <form>
        <div class="form-group row">
            <div>

                <div class="form-group row">
                    <label for="inputEmail3" class="col-sm-3 col-form-label">Select Ekai : </label>
                    <RadioGroup TValue="string" Name="rbtnEkai" Inline="true" CheckedValueChanged="@rbtnEkai_OnCheckedValueChanged">
                        <Radio TValue="string" Value="@("1")">Prabhag</Radio>
                        <Radio TValue="string" Value="@("2")">Sambhag</Radio>
                        <Radio TValue="string" Value="@("3")">Bhag</Radio>
                        <Radio TValue="string" Value="@("4")">Anchal</Radio>
                        <Radio TValue="string" Value="@("5")">Sanch</Radio>
                        <Radio TValue="string" Value="@("6")">Gram Sangathan</Radio>
                    </RadioGroup>
                </div>

                <div class="form-group row">
                    <label for="inputEmail3" class="col-sm-3 col-form-label">Select Prabhag : </label>
                    <select id="ddlPrabhag" class="form-control" disabled="@DisablePrabhag" @onchange="ddlPrabhag_SelectedIndexChanged">
                        @if (prabhags != null)
                        {
                            @foreach (var _prabhag in prabhags)
                            {
                                <option value=@_prabhag.EkaiId>@_prabhag.EkaiName</option>
                            }
                        }
                    </select>
                    <label for="inputEmail3" class="col-sm-3 col-form-label">Select Sambhag : </label>
                    <select id="ddlSambhag" class="form-control" disabled="@DisableSambhag" @onchange="ddlSambhag_SelectedIndexChanged">
                        @if (sambhags != null)
                        {
                            @foreach (var _data in sambhags)
                            {
                                <option value=@_data.EkaiId>@_data.EkaiName</option>

                            }
                        }
                    </select>
                    <label for="inputEmail3" class="col-sm-3 col-form-label">Select Bhag : </label>
                    <select id="ddlBhag" class="form-control" disabled="@DisableBhag" @onchange="ddlBhag_SelectedIndexChanged">
                        @if (bhags != null)
                        {
                            @foreach (var _data in bhags)
                            {
                                <option value=@_data.EkaiId>@_data.EkaiName</option>
                            }
                        }
                    </select>
                    <label for="inputEmail3" class="col-sm-3 col-form-label">Select Anchal : </label>
                    <select id="ddlAnchal" class="form-control" disabled="@DisableAnchal" @onchange="ddlAnchal_SelectedIndexChanged">
                        @if (anchals != null)
                        {
                            @foreach (var _data in anchals)
                            {
                                <option value=@_data.EkaiId>@_data.EkaiName</option>
                            }
                        }
                    </select>
                    <label for="inputEmail3" class="col-sm-3 col-form-label">Select Sanch : </label>
                    <select id="ddlSanch" class="form-control" disabled="@DisableSanch" @onchange="ddlSanch_SelectedIndexChanged">
                        @if (sanchs != null)
                        {
                            @foreach (var _data in sanchs)
                            {
                                <option value=@_data.EkaiId>@_data.EkaiName</option>
                            }
                        }
                    </select>
                </div>

                <div>
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Enter Ekai Name" @bind="@ekai" />
                        <div class="input-group-append">
                            <button @onclick="@Save" class="btn btn-warning">Add</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
}

@if (entities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="align-self-auto">

        <h5 class="text-primary">Total Records : @totalRecords</h5>
        <table class="table table-bordered table-hover table-responsive table-striped pre-scrollable">
            <thead>
                <tr>
                    <th class="d-none">EkaiID</th>
                    <th>Ekai</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entity in entities)
                {
                    <tr>
                        <td class="d-none">@entity.EkaiId</td>
                        <td>@entity.EkaiName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    string ekaiID;
    string ekai;
    string selectedEkai = string.Empty;
    int selectedParentID = 0;

    int selectedPrabhagID = 0;
    int selectedSambhagID = 0;
    int selectedBhagID = 0;
    int selectedAnchalID = 0;
    int selectedSanchID = 0;

    int totalRecords = 0;

    bool DisablePrabhag = true;
    bool DisableSambhag = true;
    bool DisableBhag = true;
    bool DisableAnchal = true;
    bool DisableSanch = true;


    List<MstEkai> entities = null;

    List<MstEkai> prabhags = null;
    List<MstEkai> sambhags = null;
    List<MstEkai> bhags = null;
    List<MstEkai> anchals = null;
    List<MstEkai> sanchs = null;
    List<MstEkai> gramSangathan = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        entities = await ekaiService.GetAsync();
        totalRecords = entities.Count();
    }

    private async Task LoadPrabhagsAsync()
    {
        prabhags = await ekaiService.GetAsync();
    }

    private async Task LoadSamabhagsAsync(int prabhagID)
    {
        prabhags = await ekaiService.GetAsync();
        sambhags = prabhags.Where(x => x.ParentEkaiId == prabhagID && x.EkaiTypeId == 2).ToList();
    }

    private async Task LoadBhagsAsync(int sambhagID)
    {
        var allData = await ekaiService.GetAsync();
        bhags = prabhags.Where(x => x.ParentEkaiId == sambhagID && x.EkaiTypeId == 3).ToList();
    }

    private async Task LoadAnchalsAsync(int bhagID)
    {
        var allData = await ekaiService.GetAsync();
        anchals = prabhags.Where(x => x.ParentEkaiId == bhagID && x.EkaiTypeId == 4).ToList();
    }

    private async Task LoadSanchsAsync(int anchalID)
    {
        var allData = await ekaiService.GetAsync();
        sanchs = prabhags.Where(x => x.ParentEkaiId == anchalID && x.EkaiTypeId == 5).ToList();
    }

    private async Task LoadGramSangathansAsync(int sanchID)
    {
        var allData = await ekaiService.GetAsync();
        gramSangathan = prabhags.Where(x => x.ParentEkaiId == sanchID && x.EkaiTypeId == 6).ToList();
    }

    public async Task Save()
    {

        if (selectedParentID == 0)
        {
            Console.WriteLine("Please select appropriate Ekai.");
        }
        else
        {
            MstEkai entity = new MstEkai();
            entity.EkaiName = ekai;
            entity.EkaiTypeId = Convert.ToInt16(selectedEkai);
            entity.ParentEkaiId = selectedParentID;

            var response = await ekaiService.AddAsync(entity);
            if (response)
            {
                await LoadAsync();
                ResetFields();
            }
        }
    }


    private void ResetFields()
    {
        ekaiID = null;
        ekai = string.Empty;
    }


    #region Events


    async void rbtnEkai_OnCheckedValueChanged(string value)
    {
        selectedEkai = value;
        DisablePrabhag = true;
        DisableSambhag = true;
        DisableBhag = true;
        DisableAnchal = true;
        DisableSanch = true;

        switch (Convert.ToInt16(value))
        {
            case 1:
                await LoadPrabhagsAsync();
                break;
            case 2:
                DisablePrabhag = false;

                break;
            case 3:
                DisablePrabhag = false;
                DisableSambhag = false;

                break;
            case 4:
                DisablePrabhag = false;
                DisableSambhag = false;
                DisableBhag = false;

                break;
            case 5:
                DisablePrabhag = false;
                DisableSambhag = false;
                DisableBhag = false;
                DisableAnchal = false;
                break;
            case 6:
                DisablePrabhag = false;
                DisableSambhag = false;
                DisableBhag = false;
                DisableAnchal = false;
                DisableSanch = false;
                break;

        }
    }


    async void ddlPrabhag_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedPrabhagID = Convert.ToInt32(e.Value);
        if (selectedPrabhagID > 0)
        {
            selectedParentID = selectedPrabhagID;
            await LoadSamabhagsAsync(selectedPrabhagID);
        }
    }

    async void ddlSambhag_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedSambhagID = Convert.ToInt32(e.Value);
        if (selectedSambhagID > 0)
        {
            selectedParentID = selectedSambhagID;
            await LoadBhagsAsync(selectedSambhagID);
        }
    }

    async void ddlBhag_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedBhagID = Convert.ToInt32(e.Value);
        if (selectedBhagID > 0)
        {
            selectedParentID = selectedBhagID;
            await LoadAnchalsAsync(selectedBhagID);
        }
    }

    async void ddlAnchal_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedAnchalID = Convert.ToInt32(e.Value);
        if (selectedAnchalID > 0)
        {
            selectedParentID = selectedAnchalID;
            await LoadSanchsAsync(selectedAnchalID);
        }
    }

    async void ddlSanch_SelectedIndexChanged(ChangeEventArgs e)
    {
        selectedSanchID = Convert.ToInt32(e.Value);
        if (selectedSanchID > 0)
        {
            selectedParentID = selectedSanchID;
            await LoadGramSangathansAsync(selectedSanchID);
        }
    }

    #endregion
}

