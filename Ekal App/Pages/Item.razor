@page "/item";
@using EkalEntities.Models;
@using Ekal_App.Data;

@inject ItemsService itemService;
@inject UnitService unitService;

@inject IToastService toastService;

<h3>Item</h3>
<hr />

@if (items != null)
{
<form>
    <div class="form-row">
        <div class="col-lg-3 col-md-3 col-sm-10">
            <label for="inputEmail3" class=" col-form-label text-right">Item Name : </label>
            <input type="text" class="form-control" placeholder="Enter Item Name" @bind="@item" />
        </div>
        <div class="col-lg-3 col-md-3 col-sm-10">
            <label for="inputEmail3" class="col-form-label text-right">Unit : </label>

            <div class="input-group mb-3">
                <select class="form-control" @bind="@selectUnitID">
                    @if (units != null)
                    {
                        @foreach (var _unit in units)
                        {
                            <option value=@_unit.UnitId>@_unit.Unit</option>
                        }
                    }
                </select>
                <div class="input-group-append">
                    <button @onclick="@Save" class="btn btn-warning">Add</button>
                </div>
            </div>
        </div>
    </div>
</form>
}

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="align-self-auto">

        <h5 class="text-primary">Total Records : @totalRecords</h5>
        <table class="table table-bordered table-hover table-responsive table-striped pre-scrollable">
            <thead>
                <tr>
                    <th class="d-none">ItemID</th>
                    <th>ItemName</th>
                    <th>Unit</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in items)
                {
                <tr>
                    <td class="d-none">@item.ItemId</td>
                    <td>@item.ItemName</td>
                    <td>@item.Unit</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
}


@code {
        string itemID;
        string item;

        bool IsProductionRequired = false;
        Int16 selectUnitID = 0;
        int totalRecords = 0;

        List<VItems> items = null;

        List<MstUnit> units = null;


    protected override async Task OnInitializedAsync()
    {
        await LoadItemsAsync();
        await LoadUnitsAsync();
    }

    private async Task LoadItemsAsync()
    {
        items = await itemService.GetViewAsync();
        
        totalRecords = items.Count();
    }

    private async Task LoadUnitsAsync()
    {
        units = await unitService.GetAsync();
        units.Insert(0, new MstUnit { UnitId = 0, Unit = "SELECT" });
    }

    public async Task Save()
    {
        if (selectUnitID == 0)
        {
            toastService.ShowError("Please select Unit.");
        }
        else
        {
            if (!string.IsNullOrEmpty(item))
            {
                MstItems entity = new MstItems();
                entity.ItemName = item;
                entity.UnitId = selectUnitID;
                entity.IsProductionRequired = IsProductionRequired;
                entity.CreatedBy = Common.UserProfileID;
                entity.CreatedDate = DateTime.Now;

                var response = await itemService.AddAsync(entity);
                if (response)
                {
                    await LoadItemsAsync();
                    StateHasChanged();
                    ResetFields();
                }
            }
        }
    }

    private void ResetFields()
    {
        itemID = null;
        item = string.Empty;
    }
}


